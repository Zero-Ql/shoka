{
    "version": "https://jsonfeed.org/version/1",
    "title": "上善若水 • All posts by \"单元测试\" category",
    "description": "若能避开猛烈的欢喜，自然也不会有悲痛的来袭.",
    "home_page_url": "http://yunyat.cloud",
    "items": [
        {
            "id": "http://yunyat.cloud/MyCodingBook/UnitTests/JUnit/",
            "url": "http://yunyat.cloud/MyCodingBook/UnitTests/JUnit/",
            "title": "JUnit",
            "date_published": "2024-03-11T01:02:57.000Z",
            "content_html": "<h3 id=\"junit-介绍\"><a class=\"markdownIt-Anchor\" href=\"#junit-介绍\">#</a> JUnit 介绍</h3>\n<p>在编写程序的过程中，我们常常需要对一个单独的模块进行测试，以判断其是否符合要求。</p>\n<h4 id=\"test-注解\"><a class=\"markdownIt-Anchor\" href=\"#test-注解\">#</a>  <code>@Test</code>  注解</h4>\n<p>一般来说，通过  <code>@Test</code>  注解过的方法就是测试方法，测试方法可以脱离  <code>man()</code>  方法独立运行。</p>\n<h4 id=\"参数化测试\"><a class=\"markdownIt-Anchor\" href=\"#参数化测试\">#</a> 参数化测试</h4>\n<p>为了确保单元测试的严谨性，通常会模拟不同的测试数据来测试方法的处理能力，为此我们需要编写大量的单元测试方法，可这些测试的方法大体框架都是差不多的，它们的结构都是相同的，不同的仅仅是数据和期望值，为此，我们可以使用参数化测试。</p>\n<h5 id=\"参数化测试条件\"><a class=\"markdownIt-Anchor\" href=\"#参数化测试条件\">#</a> 参数化测试条件</h5>\n<ol>\n<li>对需要测试的类添加  <code>@RunWith(Parameterized.class)</code>  注解</li>\n<li>用于存放测试数据及期望值的变量都要声明为私有变量</li>\n<li>将上一步的私有变量作为入参创建构造方法并为其赋值</li>\n<li>创建一个公共的静态方法，此方法的返回值为集合  <code>Collection</code>  ，并且此方法需要被  <code>@Parameters</code>  注解</li>\n<li>使用定义的私有变量编写测试方法</li>\n</ol>\n<p>Demo:</p>\n<p>测试方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">fun<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">.</span>li</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token static\">assertEquals</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runners<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Parameterized</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runners<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Parameterized</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Parameters</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parameterized</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FuntionTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> usesrname <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 构造方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">FuntionTest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>usesrname <span class=\"token operator\">=</span> username<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>msg <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 返回集合</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Parameters</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Collection</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token function\">get_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"用户名或密码不能为空\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"登录成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"请输入正确的用户名\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ad\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"请输入正确的密码\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123456\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"请输入正确的用户名和密码\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ad\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123456\"</span> <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token comment\">// 测试，通过断言判断测试是否成功</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFuntion_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">var</span> funtion <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Funtion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> funtion<span class=\"token punctuation\">.</span><span class=\"token function\">funtion_data</span><span class=\"token punctuation\">(</span>usesrname<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>被测试的方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">fun<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">.</span>li</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Funtion</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">funtion_data</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\tmsg <span class=\"token operator\">=</span> <span class=\"token string\">\"用户名或密码不能为空\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span> password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\tmsg <span class=\"token operator\">=</span> <span class=\"token string\">\"登录成功\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span> password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t msg <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的用户名\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tmsg <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的密码\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tmsg <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的用户名和密码\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试结果示例：</p>\n<p><img data-src=\"https://s21.ax1x.com/2024/03/10/pFy2pWD.png\" alt=\"pFy2pWD.png\"></p>\n<p>​\t还有一些其他的参数化测试方法请自行去<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1bml0LXRlYW0vanVuaXQ0L3dpa2kvUGFyYW1ldGVyaXplZC10ZXN0cw==\">参数化测试・junit-team/junit4 维基 (github.com)</span> 查看</p>\n<h4 id=\"断言\"><a class=\"markdownIt-Anchor\" href=\"#断言\">#</a> 断言</h4>\n<p>断言 (assertion) 是一种在程序中的一阶逻辑 (如：一个结果为真或假的逻辑判断式)，目的为了表示与验证软件开发者预期的结果 —— 当程序执行到断言的位置时，对应的断言应该为真。若断言不为真时，程序会中止执行，并给出错误信息。</p>\n<p>常用 <code>API</code> ：</p>\n<ul>\n<li>\n<p><code>assertEquals()</code> ：检测两个值是否相等</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertTrue()</code> ：检测条件是否为真</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertFalse(true)</code> ：检测条件是否为假</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertFalse</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertNotNull()</code> ：检测不为空</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertNotNull</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertNull()</code> ：检测为空</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertNull</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertNotSame()</code> ：检测两个相关对象是否不指向同一个对象</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertNotSame</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertSame()</code> ：检测两个相关对象是否指向同一个对象</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertSame</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertArrayEquals()</code> ：检测两个数组是否相等</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertArrayEquals</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"hamcrest\"><a class=\"markdownIt-Anchor\" href=\"#hamcrest\">#</a>  <code>Hamcrest</code></h5>\n<p><code>Hamcrest</code>  是一款用于校验的 Java 的单元测试框架，可以组合创建灵活的表达的匹配器进行断言。</p>\n<p><code>JUnit</code>  结合  <code>Hamcrest</code>  提供了一个全新的断言语法 ——  <code>assertThat</code> 。程序员可以只使用  <code>assertThat</code>  一个断言语句，结合  <code>Hamcrest</code>  提供的匹配符，就可以表达全部的测试思想。</p>\n<p>要使用  <code>Hamcrest</code>  断言，需要先使用  <code>assertThat</code>  来声明一个断言，然后再在内部进行具体匹配器的断言细节，期望值和实际值进行对比。</p>\n<h5 id=\"一般匹配符断言\"><a class=\"markdownIt-Anchor\" href=\"#一般匹配符断言\">#</a> 一般匹配符断言</h5>\n<ul>\n<li>\n<p><code>assertThat()</code> ： <code>allOf</code>  表示括号里的所有断言都要成立才测试通过，相当于  <code>&amp;&amp;</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 由于 eclipse 这个水货识别不了 allof ，所以我通过包名的方式引用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hamcrest<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>AllOf</span><span class=\"token punctuation\">.</span><span class=\"token function\">allOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"he\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">containsString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>anyOf</code>  表示括号里的所有断言只要有一个成立测试就通过，相当于  <code>||</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hamcrest<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>AnyOf</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyOf</span><span class=\"token punctuation\">(</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">containsString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>anything</code>  表示无论是什么条件，测试都为 <code>true</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hamcrest<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>IsAnything</span><span class=\"token punctuation\">.</span><span class=\"token function\">anything</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>is</code>  表示如果前面给出的期望值等于后面给出的值，则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hamcrest<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>Is</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>not</code>  与 is 正好相反，如果前面给出的期望值不等于后面给出的值，则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hamcrest<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span>IsNot</span><span class=\"token punctuation\">.</span><span class=\"token function\">not</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"字符串相关匹配符\"><a class=\"markdownIt-Anchor\" href=\"#字符串相关匹配符\">#</a> 字符串相关匹配符</h5>\n<ul>\n<li>\n<p><code>assertThat()</code> ： <code>containsString</code>  表示如果前面的期望值包含后面的子字符串则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">containsString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>startsWith</code>  表示如果前面的期望值是以后面的子字符串开头则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hell\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>endsWith</code>  表示如果前面的期望值是以后面的子字符串结尾则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>equalTo</code>  表示如果前面的期望值跟后面的字符串相等则测试通过，相当于  <code>equals()</code>  方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">equalTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>equalToIgnoringCase</code>  表示如果后面的值在忽略大小写的情况下等于期望值则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">equalToIgnoringCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HELLO world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>equalToIgnoringWhiteSpace</code>  表示如果后面的值在忽略前后任意个空格的情况下等于期望值则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">equalToIgnoringWhiteSpace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"   hello world    \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"数值相关匹配符\"><a class=\"markdownIt-Anchor\" href=\"#数值相关匹配符\">#</a> 数值相关匹配符</h5>\n<ul>\n<li>\n<p><code>assertThat()</code> ： <code>closeTo</code>  匹配符表明如果所<strong>测试的浮点型数在 1.0±0.03 范围之内</strong>则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.03</span><span class=\"token punctuation\">,</span> <span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token function\">closeTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.03</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>greaterThan</code>  匹配符表明如果所<strong>测试的数值大于 1</strong> 则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">greaterThan</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>lessThan</code>  匹配符表明如果所<strong>测试的数值小于 2</strong> 则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">lessThan</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>greaterThanOrEqualTo</code>  匹配符表明如果所<strong>测试的数值大于等于 1</strong> 则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">greaterThanOrEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>lessThanOrEqualTo</code>  匹配符表明如果所<strong>测试的数值小于等于 1</strong> 则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">lessThanOrEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"集合相关匹配符\"><a class=\"markdownIt-Anchor\" href=\"#集合相关匹配符\">#</a> 集合相关匹配符</h5>\n<ul>\n<li>\n<p><code>assertThat()</code> ： <code>hasEntry</code>  匹配符表明如果测试的<strong> Map 对象含有一个键值为 &quot;bar&quot; 对应元素值为 &quot;foo&quot; 的 Entry 项</strong>则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">,</span> <span class=\"token function\">hasEntry</span><span class=\"token punctuation\">(</span>“bar”<span class=\"token punctuation\">,</span> “foo”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>hasItem</code>  匹配符表明如果测试的<strong>迭代对象含有元素以 ba 开头项</strong>则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssertThat</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>“foo”<span class=\"token punctuation\">,</span> “bar”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">hasItem</span><span class=\"token punctuation\">(</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>“ba”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>hasKey</code>  匹配符表明如果测试的 **Map 对象含有键值 “bar”** 则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">,</span> <span class=\"token function\">hasKey</span><span class=\"token punctuation\">(</span>“bar”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>assertThat()</code> ： <code>hasValue</code>  匹配符表明如果测试的 **Map 对象含有元素值 “foo”** 则测试通过</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">,</span> <span class=\"token function\">hasValue</span><span class=\"token punctuation\">(</span>“foo”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<p>END</p>\n",
            "tags": [
                "原创",
                "java",
                "junit"
            ]
        },
        {
            "id": "http://yunyat.cloud/MyCodingBook/UnitTests/Selenium-%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://yunyat.cloud/MyCodingBook/UnitTests/Selenium-%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "Selenium 的使用",
            "date_published": "2024-03-05T07:47:19.000Z",
            "content_html": "<h3 id=\"selenium-介绍\"><a class=\"markdownIt-Anchor\" href=\"#selenium-介绍\">#</a>  <code>Selenium</code>  介绍</h3>\n<p><code>selenium</code>  是一个广泛使用的模拟浏览器运行的库，它是一个用于  <code>Web</code>  应用程序测试的工具。 <code>Selenium</code>  测试直接运行在浏览器中，就像真正的用户在操作一样，并且支持大多数现代  <code>Web</code>  浏览器。</p>\n<h3 id=\"selenium-自动化测试的八种定位方法\"><a class=\"markdownIt-Anchor\" href=\"#selenium-自动化测试的八种定位方法\">#</a>  <code>Selenium</code>  自动化测试的八种定位方法</h3>\n<h4 id=\"使用场景\"><a class=\"markdownIt-Anchor\" href=\"#使用场景\">#</a> 使用场景：</h4>\n<p>① 优先用 <code>id</code> 、 <code>name</code> （保证唯一性）</p>\n<p>② 是否是超链接，是超链接用 <code>link_text</code> 、 <code>partial_link_text</code> ，否则用 <code>css_selector</code> 、 <code>xpath</code></p>\n<p>③  <code>class_name</code> 、 <code>tag_name</code>  很少用，因为这俩个难以保证被定为元素或属性的唯一性</p>\n<h4 id=\"id-定位\"><a class=\"markdownIt-Anchor\" href=\"#id-定位\">#</a>  <code>ID</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.ID,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>ID<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"name-定位\"><a class=\"markdownIt-Anchor\" href=\"#name-定位\">#</a>  <code>Name</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.NAME,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>NAME<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"class-定位\"><a class=\"markdownIt-Anchor\" href=\"#class-定位\">#</a>  <code>Class</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.CLASS_NAME,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>CLASS_NAME<span class=\"token punctuation\">,</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"tag_name-定位\"><a class=\"markdownIt-Anchor\" href=\"#tag_name-定位\">#</a>  <code>Tag_Name</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.TAG_NAME,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>TAG_NAME<span class=\"token punctuation\">,</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"link_text-定位\"><a class=\"markdownIt-Anchor\" href=\"#link_text-定位\">#</a>  <code>Link_Text</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.LINK_TEXT,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>LINK_TEXT<span class=\"token punctuation\">,</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"登\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"partial_link-定位\"><a class=\"markdownIt-Anchor\" href=\"#partial_link-定位\">#</a>  <code>Partial_Link</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.PARTIAL_LINK,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>PARTIAL_LINK<span class=\"token punctuation\">,</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"登录\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"xpath-定位\"><a class=\"markdownIt-Anchor\" href=\"#xpath-定位\">#</a>  <code>Xpath</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.XPATH,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 XPATH 定位带有 id='login' 属性和 name='user' 属性的 input 标签</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>XPATH<span class=\"token punctuation\">,</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"//input[@id='login' and @name='user']\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"css_selector-定位\"><a class=\"markdownIt-Anchor\" href=\"#css_selector-定位\">#</a>  <code>Css_selector</code>  定位</h4>\n<p>方法原型：</p>\n<p><code>driver.find_element(By.CSS_SELECTOR,value)</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>driver<span class=\"token punctuation\">.</span>find_element<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span>By<span class=\"token punctuation\">.</span>CSS_SELECTOR<span class=\"token punctuation\">,</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"input#login\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "原创",
                "python",
                "selenium"
            ]
        }
    ]
}