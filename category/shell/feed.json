{
    "version": "https://jsonfeed.org/version/1",
    "title": "上善若水 • All posts by \"shell\" category",
    "description": "若能避开猛烈的欢喜，自然也不会有悲痛的来袭.",
    "home_page_url": "http://yunyat.cloud",
    "items": [
        {
            "id": "http://yunyat.cloud/MyCodingBook/shell/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0-3/",
            "url": "http://yunyat.cloud/MyCodingBook/shell/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0-3/",
            "title": "shell脚本笔记-3",
            "date_published": "2023-12-16T13:32:47.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://yunyat.cloud/MyCodingBook/shell/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0-1/",
            "url": "http://yunyat.cloud/MyCodingBook/shell/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0-1/",
            "title": "shell脚本笔记-1",
            "date_published": "2023-12-15T07:06:21.000Z",
            "content_html": "<h3 id=\"shell命令解释器\"><a class=\"markdownIt-Anchor\" href=\"#shell命令解释器\">#</a> Shell 命令解释器</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /etc/shells</pre></td></tr></table></figure><p>shell 的命令解释器用于执行 shell 命令或 shell 脚本文件，Centos 下有四种解释器，一般用默认的 /bin/bash 即可</p>\n<h3 id=\"执行shell脚本\"><a class=\"markdownIt-Anchor\" href=\"#执行shell脚本\">#</a> 执行 Shell 脚本</h3>\n<p>要执行 shell 脚本有两种方法：</p>\n<ol>\n<li>将要执行的  <code>.sh</code>  脚本通过  <code>chmod</code>  给予可执行权限，然后执行</li>\n<li>不赋予可执行权限，通过  <code>bash xxx.sh</code>  或  <code>sh xxx.sh</code>  来执行</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> +x ./hello.sh    <span class=\"token comment\"># 方法一</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./hello.sh    <span class=\"token comment\"># 方法二</span></pre></td></tr></table></figure><p>使用  <code>.sh</code>  为后缀只是为了方便区分，对实际运行脚本没有任何影响</p>\n<h4 id=\"shell变量\"><a class=\"markdownIt-Anchor\" href=\"#shell变量\">#</a> Shell 变量</h4>\n<p>shell 脚本定义变量除了等号两边不能加空格，其他和别的编程语言大差不差（值得一提的是，变量名不支持中文命名，其他大部分编程语言是支持的）</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr></table></figure><h4 id=\"变量类型\"><a class=\"markdownIt-Anchor\" href=\"#变量类型\">#</a> 变量类型</h4>\n<p>在运行 shell 时，会同时存在三种变量类型：</p>\n<ol>\n<li>局部变量：局部变量在脚本或命令中被定义，只能由当前对象使用，无法被其他 shell 启动的对象访问</li>\n<li>环境变量：环境变量是所有的脚本或程序都能访问的，某些程序或脚本需要环境变量来维持运行，必要时也可以由 shell 脚本自己定义环境变量</li>\n<li>shell 变量：shell 变量是由 shell 程序设置的特殊变量，shell 变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了 shell 的正常运行</li>\n</ol>\n<h4 id=\"使用变量\"><a class=\"markdownIt-Anchor\" href=\"#使用变量\">#</a> 使用变量</h4>\n<p>要使用定义过的变量，只需在变量名前加美元符号，最好在变量名外加花括号以区分边界</p>\n<p><img data-src=\"https://s1.ax1x.com/2023/09/09/pP6gZdO.png\" alt=\"shell1\"></p>\n<p><img data-src=\"https://s1.ax1x.com/2023/09/09/pP6gVeK.png\" alt=\"shell2\"></p>\n<h4 id=\"只读变量\"><a class=\"markdownIt-Anchor\" href=\"#只读变量\">#</a> 只读变量</h4>\n<p>使用 readonly 可以将变量定义为只读变量，只读变量不能被改变</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">readonly</span> name</pre></td></tr></table></figure><h4 id=\"删除变量\"><a class=\"markdownIt-Anchor\" href=\"#删除变量\">#</a> 删除变量</h4>\n<p>使用 unset 删除变量</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">unset</span> name</pre></td></tr></table></figure><h3 id=\"shell-传递参数\"><a class=\"markdownIt-Anchor\" href=\"#shell-传递参数\">#</a> Shell 传递参数</h3>\n<p>有一些特殊变量在 shell 脚本中有特殊含义，如：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数处理</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>$#</code></td>\n<td style=\"text-align:center\">传递到脚本的参数个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$*</code></td>\n<td style=\"text-align:center\">以一个单字符串的形式输出所有向脚本输入的参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$$</code></td>\n<td style=\"text-align:center\">脚本运行的当前进程  <code>ID</code>  号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$!</code></td>\n<td style=\"text-align:center\">后台运行的最后一个进程的 <code>ID</code>  号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$@</code></td>\n<td style=\"text-align:center\">与 <code>$&#123;*&#125;</code>  效果相同，但是加引号时会返回以引号括起来的每个参数，与 <code>$&#123;*&#125;</code>  的区别是 <code>$&#123;*&#125;</code>  将所有参数当一个字符串处理，而 <code>$&#123;@&#125;</code>  则是分别处理每个参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$-</code></td>\n<td style=\"text-align:center\">显示 Shell 使用的当前选项，与  <code>set</code>  命令功能相同</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$?</code></td>\n<td style=\"text-align:center\">显示最后命令的退出状态。 <code>0</code>  表示没有错误，其他任何值都表明有错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$0</code></td>\n<td style=\"text-align:center\">表示脚本的名称</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$1</code></td>\n<td style=\"text-align:center\">表示脚本的参数，可以有多个，用 <code>$&#123;1&#125;</code>  、 <code>$&#123;2&#125;</code>  … 表示</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"有<span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>&#125;</span>个参数\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"参数:<span class=\"token variable\">$&#123;*&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"进程ID:<span class=\"token variable\">$&#123;$&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"最后一个进程ID:<span class=\"token variable\">$&#123;<span class=\"token operator\">!</span>&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Shell选项:<span class=\"token variable\">$&#123;-&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"脚本name:<span class=\"token variable\">$&#123;0&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> + <span class=\"token variable\">$&#123;2&#125;</span> = \"</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">expr</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span> + $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;?&#125;</span></pre></td></tr></table></figure><p>输入：</p>\n<blockquote>\n<p>bash ./test.sh 10 20</p>\n</blockquote>\n<p>输出结果：</p>\n<blockquote>\n<p>有 2 个参数<br>\n参数：10 20<br>\n 进程 ID:71819<br>\n 最后一个进程 ID:<br>\nShell 选项:hB<br>\n 脚本 name:./test.sh<br>\n10 + 20 = 30<br>\n0</p>\n</blockquote>\n<h3 id=\"shell字符串\"><a class=\"markdownIt-Anchor\" href=\"#shell字符串\">#</a> Shell 字符串</h3>\n<p>shell 的字符串可以加双引号、单引号，也可以不加引号</p>\n<h4 id=\"单引号\"><a class=\"markdownIt-Anchor\" href=\"#单引号\">#</a> 单引号</h4>\n<ul>\n<li>\n<p>加单引号的字符串中的变量是无效的，可以使用单引号将变量引用起来达到拼接字符串的目的</p>\n</li>\n<li>\n<p>单引号字符串中不能出现单独的单引号，转义后也不行，只能成对出现</p>\n</li>\n</ul>\n<h4 id=\"双引号\"><a class=\"markdownIt-Anchor\" href=\"#双引号\">#</a> 双引号</h4>\n<ul>\n<li>双引号中可以有变量</li>\n<li>双引号中可以出现转义字符</li>\n</ul>\n<h4 id=\"拼接字符串\"><a class=\"markdownIt-Anchor\" href=\"#拼接字符串\">#</a> 拼接字符串</h4>\n<p>使用双引号拼接字符串：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"QSky\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello! <span class=\"token variable\">$&#123;name&#125;</span>\"</span></pre></td></tr></table></figure><p>输出结果：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Hello<span class=\"token operator\">!</span> QSky</pre></td></tr></table></figure><p><img data-src=\"https://s1.ax1x.com/2023/09/09/pP6RMrt.png\" alt=\"shell3\"></p>\n<p>输出结果：</p>\n<blockquote>\n<p>string hello world</p>\n<p name=\"\">string $</p>\n<p>string hello world</p>\n<p>“string” hello world</p>\n</blockquote>\n<h4 id=\"获取字符串的长度\"><a class=\"markdownIt-Anchor\" href=\"#获取字符串的长度\">#</a> 获取字符串的长度</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>str&#125;</span>    <span class=\"token comment\"># $&#123;#str&#125; 等价于 $&#123;#str [0]&#125;</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>11</p>\n</blockquote>\n<h4 id=\"提取子字符串\"><a class=\"markdownIt-Anchor\" href=\"#提取子字符串\">#</a> 提取子字符串</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 语法：字符串变量名：要提取的子串的开始位置：要提取的子串的结束位置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;str<span class=\"token operator\">:</span>6<span class=\"token operator\">:</span>8&#125;</span>    <span class=\"token comment\"># 第一个字符 'h' 索引为 0</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>world</p>\n</blockquote>\n<h4 id=\"查找字符串\"><a class=\"markdownIt-Anchor\" href=\"#查找字符串\">#</a> 查找字符串</h4>\n<p>查找字符  <code>i</code>  或  <code>o</code>  的位置，哪个先出现就计算哪个</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">expr</span> index <span class=\"token string\">\"<span class=\"token variable\">$str</span>\"</span> or<span class=\"token variable\">`</span></span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>5</p>\n</blockquote>\n<h3 id=\"shell数组\"><a class=\"markdownIt-Anchor\" href=\"#shell数组\">#</a> Shell 数组</h3>\n<p>和大多数编程语言一样，shell 脚本也有数组，但与其他编程语言不同的是，shell 不支持多维数组，不过 shell 的数组并没有长度限制，并且可以使用不连续的下标，下标范围也没有限制</p>\n<h4 id=\"定义-shell-数组\"><a class=\"markdownIt-Anchor\" href=\"#定义-shell-数组\">#</a> 定义 shell 数组</h4>\n<p>数组用小括号来表示，用空格区分值</p>\n<p>格式：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">array_name</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>value0 value1 value2 value3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">array_name</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>value0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>value1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>value2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>value3</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>示例：</p>\n<pre><code>array_name=(\n\n)\n</code></pre>\n<p>也能单独定义数组的单个元素</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>array_name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>value0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>array_name<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>value1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>array_name<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>value5</pre></td></tr></table></figure><h4 id=\"读取数组\"><a class=\"markdownIt-Anchor\" href=\"#读取数组\">#</a> 读取数组</h4>\n<p>和其他编程语言一样，shell 同样是通过数组名加下标来读取元素</p>\n<pre><code>$&#123;数组名[下标]&#125;\n</code></pre>\n<p>可以使用  <code>@</code>  或  <code>*</code>  读取数组的全部元素：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'string '</span><span class=\"token variable\">$&#123;name&#125;</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'string $&#123;name&#125;'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">\"string <span class=\"token variable\">$&#123;name&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">\"<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>string<span class=\"token entity\" title=\"\\&quot;\">\\\"</span> <span class=\"token variable\">$&#123;name&#125;</span>\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;str<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span> <span class=\"token comment\"># 和 echo $&#123;str [*]&#125; 效果相同</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<h6 id=\"为了便于阅读我给输出结果分段处理了\"><a class=\"markdownIt-Anchor\" href=\"#为了便于阅读我给输出结果分段处理了\">#</a> 为了便于阅读，我给输出结果分段处理了</h6>\n<p>string hello world</p>\n<p name=\"\">string $</p>\n<p>string hello world</p>\n<p>“string” hello world</p>\n</blockquote>\n<h4 id=\"获取数组的长度\"><a class=\"markdownIt-Anchor\" href=\"#获取数组的长度\">#</a> 获取数组的长度</h4>\n<p>获取数组长度的方法与获取字符串长度的方法相似</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">array_name</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>value0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>value1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>value2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>value3</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">length_1</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>array_name<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 或</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">length_2</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>array_name<span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 获取单个数组元素的长度</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">length_3</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;<span class=\"token operator\">#</span>array_name<span class=\"token punctuation\">[</span>2<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;length_1&#125;</span> <span class=\"token variable\">$&#123;length_2&#125;</span> <span class=\"token variable\">$&#123;length_3&#125;</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>4 4 6</p>\n<p>注：6 为第二个下标所表示的元素的长度</p>\n</blockquote>\n<h4 id=\"关联数组\"><a class=\"markdownIt-Anchor\" href=\"#关联数组\">#</a> 关联数组</h4>\n<p>bash 脚本支持关联数组，可以使用任意的字符串或者整数来作为下标来访问数组。</p>\n<p>关联数组的键是唯一的，有点类似于其他编程语言的键值对。</p>\n<p>语法：</p>\n<blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">declare</span> <span class=\"token parameter variable\">-A</span> array-name<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"key_1\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"value_1\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"key_2\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"value_2\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"key_3\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"value_3\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"key_4\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"value_4\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"key_n\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"value_n\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></blockquote>\n<p>使用  <code>declare</code>  命令来声明， <code>-A</code>  选项就是用于声明一个关联数组。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">declare</span> <span class=\"token parameter variable\">-A</span> <span class=\"token assign-left variable\">site</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"QSky\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"zero-li.fun\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;site<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>zero-li.fun QSky</p>\n</blockquote>\n<p>同样可以先声明再赋值：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">declare</span> <span class=\"token parameter variable\">-A</span> site</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>site<span class=\"token punctuation\">[</span><span class=\"token string\">\"zero\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"zero-li.fun\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;site<span class=\"token punctuation\">[</span>\"zero\"<span class=\"token punctuation\">]</span>&#125;</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>zero-li.fun</p>\n</blockquote>\n<h3 id=\"shell-注释\"><a class=\"markdownIt-Anchor\" href=\"#shell-注释\">#</a> Shell 注释</h3>\n<p>在 shell 脚本中，以  <code>#</code>  开头的就是注释。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 这是一句注释</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> 注释的内容并不会被执行</pre></td></tr></table></figure><h4 id=\"多行注释\"><a class=\"markdownIt-Anchor\" href=\"#多行注释\">#</a> 多行注释</h4>\n<p>可以使用  <code>:</code>  命令，并用单引号  <code>'</code>  将多行内容括起来。</p>\n<p>语法： <code>:</code>  +  <code> </code>  (空格) +  <code>'</code>  (单引号)</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这是多段注释</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>可以有多行内容</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>'</span></pre></td></tr></table></figure><p>shell 常用命令及关键字：</p>\n<p><code>readonly</code> ：将变量定义为只读，无法更改其值</p>\n<p><code>unset</code> ：删除变量，无法删除只读变量</p>\n<hr>\n<p><em>END</em></p>\n",
            "tags": [
                "原创",
                "shell"
            ]
        },
        {
            "id": "http://yunyat.cloud/MyCodingBook/shell/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0-2/",
            "url": "http://yunyat.cloud/MyCodingBook/shell/shell%E8%84%9A%E6%9C%AC%E7%AC%94%E8%AE%B0-2/",
            "title": "shell脚本笔记 - 2",
            "date_published": "2023-11-27T08:59:13.000Z",
            "content_html": "<h3 id=\"shell\"><a class=\"markdownIt-Anchor\" href=\"#shell\">#</a> Shell</h3>\n<p>原生 bash 不支持简单的数学运算，但是可以通过其他命令来实现。</p>\n<h4 id=\"expr\"><a class=\"markdownIt-Anchor\" href=\"#expr\">#</a>  <code>expr</code></h4>\n<p>expr 是一款表达式计算工具，使用它能完成表达式的求值操作，一般用于整数值，也可用于字符串。</p>\n<p>使用 expr 时，一定要将 expr 表达式用<b>反引号</b>括起来或使用 <code>$()</code>  将其括起来。</p>\n<p>语法：</p>\n<blockquote>\n<p><code>$(expr 表达式)</code></p>\n</blockquote>\n<h4 id=\"字符串操作\"><a class=\"markdownIt-Anchor\" href=\"#字符串操作\">#</a> 字符串操作</h4>\n<ol>\n<li>计算字符串的长度\n<ul>\n<li><code>length</code></li>\n<li>语法： <code>expr length string_name</code></li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> length <span class=\"token string\">\"<span class=\"token variable\">$&#123;str&#125;</span>\"</span><span class=\"token variable\">)</span></span></pre></td></tr></table></figure><p>输出说明：</p>\n<blockquote>\n<p>11</p>\n</blockquote>\n<ol start=\"2\">\n<li>截取字符串子串\n<ul>\n<li><code>substr</code></li>\n<li>语法： <code>expr substr string_name start_num end_num</code></li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> substr <span class=\"token string\">\"<span class=\"token variable\">$&#123;str&#125;</span>\"</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span><span class=\"token variable\">)</span></span></pre></td></tr></table></figure><p>输出说明：</p>\n<blockquote>\n<p>hello</p>\n</blockquote>\n<ol start=\"3\">\n<li>截取第一个字符串出现的位置\n<ul>\n<li><code>index</code></li>\n<li>语法： <code>expr index string_name substrings_name</code></li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> index <span class=\"token string\">\"<span class=\"token variable\">$&#123;str&#125;</span>\"</span> e<span class=\"token variable\">)</span></span></pre></td></tr></table></figure><h4 id=\"运算符\"><a class=\"markdownIt-Anchor\" href=\"#运算符\">#</a> 运算符</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>+</code></td>\n<td style=\"text-align:center\">加法运算符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-</code></td>\n<td style=\"text-align:center\">减法运算符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>*</code></td>\n<td style=\"text-align:center\">乘法运算符，在使用  <code>*</code>  运算符时，需要使用反斜杠 ( <code>\\</code> ) 进行转义</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>/</code></td>\n<td style=\"text-align:center\">除法运算符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>%</code></td>\n<td style=\"text-align:center\">求余运算符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>=</code></td>\n<td style=\"text-align:center\">赋值运算符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>==</code></td>\n<td style=\"text-align:center\">相等运算符，用于比较两个数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>!=</code></td>\n<td style=\"text-align:center\">不相等运算符，用于比较两个数字</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"算数运算符\"><a class=\"markdownIt-Anchor\" href=\"#算数运算符\">#</a> 算数运算符</h5>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 减法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> - <span class=\"token variable\">$&#123;2&#125;</span> = \"</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span> - $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 加法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> + <span class=\"token variable\">$&#123;2&#125;</span> = \"</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span> + $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 乘法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> * <span class=\"token variable\">$&#123;2&#125;</span> = \"</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span>* $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 除法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> / <span class=\"token variable\">$&#123;2&#125;</span> = \"</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span> / $<span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token variable\">)</span></span></pre></td></tr></table></figure><p>输入：</p>\n<blockquote>\n<p>bash ./demo.sh 20 10</p>\n</blockquote>\n<p>输出结果：</p>\n<blockquote>\n<p>20 - 10 = 10</p>\n<p>20 + 10 = 30</p>\n<p>20 * 10 = 200</p>\n<p>20 / 10 = 2</p>\n</blockquote>\n<h5 id=\"条件运算符\"><a class=\"markdownIt-Anchor\" href=\"#条件运算符\">#</a> 条件运算符</h5>\n<p>以下运算符中，括号内的和括号外的作用相同</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>==(-eq)</code></td>\n<td style=\"text-align:center\">检测两个数是否相等，相等返回  <code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>!=(-ne)</code></td>\n<td style=\"text-align:center\">检测两个数是否不相等，不相等返回 <code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;(-gt)</code></td>\n<td style=\"text-align:center\">检测左边的数是否大于右边的数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;(-lt)</code></td>\n<td style=\"text-align:center\">检测左边的数是否小于右边的数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;=(-ge)</code></td>\n<td style=\"text-align:center\">检测左边的数是否大于等于右边的数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;=(-le)</code></td>\n<td style=\"text-align:center\">检测左边的数是否小于等于右边的数</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"等于:\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 不等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"不等于:\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 不等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"大于:\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 大于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 小于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"小于:\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 小于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 大于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"大于等于:\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> $&#123;<span class=\"token number\">1</span>&#125; <span class=\"token operator\">>=</span> $&#123;<span class=\"token number\">2</span>&#125; <span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 大于等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 小于等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"小于等于:\"</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> $&#123;<span class=\"token number\">1</span>&#125; <span class=\"token operator\">&lt;=</span> $&#123;<span class=\"token number\">2</span>&#125; <span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 小于等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span> 大于等于 <span class=\"token variable\">$&#123;2&#125;</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p>输出结果：</p>\n<blockquote>\n<p>等于:<br>\n10 不等于 15</p>\n<p>不等于:<br>\n10 不等于 15</p>\n<p>大于:<br>\n10 小于 15</p>\n<p>小于:<br>\n10 小于 15</p>\n<p>大于等于:<br>\n10 小于等于 15</p>\n<p>小于等于:<br>\n10 小于等于 15</p>\n</blockquote>\n<h5 id=\"布尔运算符\"><a class=\"markdownIt-Anchor\" href=\"#布尔运算符\">#</a> 布尔运算符</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>!</code></td>\n<td style=\"text-align:center\">非运算，对表达式结果取反</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">|| <code>(-o)</code></td>\n<td style=\"text-align:center\">或运算，表达式结果有一个为  <code>true</code> ，那么整体结果都为  <code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&amp;&amp;(-a)</code></td>\n<td style=\"text-align:center\">与运算，表达式结果都为  <code>true</code>  才返回  <code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p>注意：在  <code>[[]]</code>  中不能使用  <code>-o</code>  和  <code>-a</code>  运算符</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p>输入：./demo.sh 10 15</p>\n<p>输出结果:</p>\n<blockquote>\n<p>true</p>\n<p>false</p>\n<p>true</p>\n</blockquote>\n<h5 id=\"字符串运算符\"><a class=\"markdownIt-Anchor\" href=\"#字符串运算符\">#</a> 字符串运算符</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>=</code></td>\n<td style=\"text-align:center\">检测两个字符串是否相等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>!=</code></td>\n<td style=\"text-align:center\">检测两个字符串是否不相等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-z</code></td>\n<td style=\"text-align:center\">检测字符串的长度是否为 <code>0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-n</code></td>\n<td style=\"text-align:center\">检测字符串的长度是否不为 <code>0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>$</code></td>\n<td style=\"text-align:center\">检测字符串是否不为空</td>\n</tr>\n</tbody>\n</table>\n<p>注意：在使用 <code>-n</code>  运算符时，应该给要判断的字符串加上  <code>&quot;&quot;</code>  号，否则检测的结果永远是  <code>true</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$&#123;2&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;1&#125;</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;1&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"true\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"false\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p>输入：./demo.sh hello world</p>\n<p>输出结果：</p>\n<blockquote>\n<p>false</p>\n<p>true</p>\n<p>false</p>\n<p>true</p>\n<p>true</p>\n</blockquote>\n<h5 id=\"文件测试运算符\"><a class=\"markdownIt-Anchor\" href=\"#文件测试运算符\">#</a> 文件测试运算符</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">运算符</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>-b file</code></td>\n<td style=\"text-align:center\">检测文件是否是块设备文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-c file</code></td>\n<td style=\"text-align:center\">检测文件是否是字符设备文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-d file</code></td>\n<td style=\"text-align:center\">检测文件是否是目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-f file</code></td>\n<td style=\"text-align:center\">检测文件是否是普通文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-g file</code></td>\n<td style=\"text-align:center\">检测文件是否设置了  <code>SGID</code>  位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-k file</code></td>\n<td style=\"text-align:center\">检测文件是否设置了粘着位 <code>(Sticky Bit)</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-p file</code></td>\n<td style=\"text-align:center\">检测文件是否是有名管道</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-u file</code></td>\n<td style=\"text-align:center\">检测文件是否设置了  <code>SUID</code>  位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-r file</code></td>\n<td style=\"text-align:center\">检测文件是否可读</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-w file</code></td>\n<td style=\"text-align:center\">检测文件是否可写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-x file</code></td>\n<td style=\"text-align:center\">检测文件是否可执行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-s file</code></td>\n<td style=\"text-align:center\">检测文件是否为空（文件大小是否大于 <code>0</code> ）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>-e file</code></td>\n<td style=\"text-align:center\">检测文件（包括目录）是否存在</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p><em>END</em></p>\n",
            "tags": [
                "原创",
                "shell"
            ]
        }
    ]
}