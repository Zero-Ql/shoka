{
    "version": "https://jsonfeed.org/version/1",
    "title": "上善若水 • All posts by \"ssh\" tag",
    "description": "若能避开猛烈的欢喜，自然也不会有悲痛的来袭.",
    "home_page_url": "http://yunyat.cloud",
    "items": [
        {
            "id": "http://yunyat.cloud/linux/SSH-Agent/",
            "url": "http://yunyat.cloud/linux/SSH-Agent/",
            "title": "SSH Agent",
            "date_published": "2024-11-03T06:36:15.000Z",
            "content_html": "<h3 id=\"ssh-agent-简介\"><a class=\"markdownIt-Anchor\" href=\"#ssh-agent-简介\">#</a> <em>SSH Agent</em> 简介</h3>\n<blockquote>\n<p>*SSH Agent（Secure Shell Agent）* 是一个帮助管理 <em>SSH</em> 认证过程的守护进程。它的主要功能是存储用户的私钥，并代表用户在进行 <em>SSH</em> 认证时向 <em>SSH</em> 服务器提供这些私钥，从而避免频繁输入密码或私钥文件的路径。<em>SSH Agent</em> 的设计目的是为了提高安全性、方便性和效率。</p>\n</blockquote>\n<p>总结：使用 <em>ssh agent</em> 可以使你用不同的私钥免密登录不同的账号</p>\n<h3 id=\"主要功能\"><a class=\"markdownIt-Anchor\" href=\"#主要功能\">#</a> 主要功能</h3>\n<ol>\n<li><strong>存储私钥</strong>：\n<ul>\n<li><em>SSH Agent</em> 可以存储用户的私钥，并在需要时提供给 <em>SSH</em> 客户端。</li>\n<li>这样用户不需要每次都输入私钥的密码或指定私钥文件的路径。</li>\n</ul>\n</li>\n<li><strong>简化认证过程</strong>：\n<ul>\n<li><em>SSH Agent</em> 可以简化 <em>SSH</em> 认证过程，使得用户只需要一次加载私钥，之后就可以在多个会话中使用。</li>\n<li>这样可以避免每次使用 SSH 连接时都需要重新输入密码或使用  <code>-i</code>  参数指定私钥文件。</li>\n</ul>\n</li>\n<li><strong>提高安全性</strong>：\n<ul>\n<li>私钥存储在内存中，并受到 <em>SSH Agent</em> 的保护，减少了私钥被未经授权的访问的风险。</li>\n<li><em>SSH Agent</em> 可以配置为在一定时间内自动删除私钥，从而增加安全性。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h3>\n<ol>\n<li>\n<p>启动</p>\n<ul>\n<li>在 <em>Windows</em> 下使用  <code>ssh-agent -s</code>  来启动守护进程</li>\n</ul>\n</li>\n<li>\n<p>将输出的环境变量添加到当前会话</p>\n<ul>\n<li>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>命令</span><a href=\"https://yunyat.cloud\">参考链接</a></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Set-Content env:<span class=\"token environment constant\">SSH_AUTH_SOCK</span> <span class=\"token variable\">$env</span><span class=\"token builtin class-name\">:</span><span class=\"token environment constant\">SSH_AUTH_SOCK</span></pre></td></tr><tr class=\"marked\"><td data-num=\"2\"></td><td><pre>Set-Content env:SSH_AGENT_PID <span class=\"token variable\">$env</span>:SSH_AGENT_PID</pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>添加私钥到 <em>SSH Agent</em></p>\n<ul>\n<li>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>命令</span><a href=\"https://yunyat.cloud\">参考链接</a></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre>ssh-add ~/.ssh/<span class=\"token punctuation\">[</span>你的私钥名称<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 例如：ssh-add ~/.ssh/id_rsa_github</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<div class=\"note info\">\n<p>添加成功应该显示为类似的输出 “Identity added: .\\id_rsa_github (github)”</p>\n</div>\n<h3 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h3>\n<ol>\n<li><code>ssh-add -l </code>  查看当前 <em>SSH Agent</em> 中已加载的私钥</li>\n<li><code>ssh-add -D</code>  删除 <em>SSH Agent</em> 中所有私钥</li>\n</ol>\n<hr>\n<p><em>END</em></p>\n",
            "tags": [
                "原创",
                "电脑技术",
                "SSH"
            ]
        },
        {
            "id": "http://yunyat.cloud/linux/Win%E8%87%B3Linux%E7%9A%84%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/",
            "url": "http://yunyat.cloud/linux/Win%E8%87%B3Linux%E7%9A%84%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/",
            "title": "Win至Linux的免密登录",
            "date_published": "2023-09-09T15:30:41.000Z",
            "content_html": "<h4 id=\"配置-windows-端\"><a class=\"markdownIt-Anchor\" href=\"#配置-windows-端\">#</a> 配置 Windows 端</h4>\n<ol>\n<li>先在 Windows 下生成公钥文件</li>\n</ol>\n<p>使用 win+R 打开运行对话框，输入 cmd 打开命令提示符（或者随便打开一个文件夹 --&gt; 右键 --&gt; 在终端中打开）</p>\n<p>输入以下命令：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token operator\">-</span>t rsa</pre></td></tr></table></figure><p>之后无脑回车确定</p>\n<p><img data-src=\"https://s1.ax1x.com/2023/09/09/pPcuprT.png\" alt=\"powershell1\"></p>\n<ol start=\"2\">\n<li>找到你默认存放公钥的位置</li>\n</ol>\n<p><img data-src=\"https://s1.ax1x.com/2023/09/09/pPcuPZF.png\" alt=\"powershell2\"></p>\n<ol start=\"3\">\n<li>将你生成的公钥文件传到 Linux 服务器上</li>\n</ol>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scp 你公钥存放的位置<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>ssh/id_rsa<span class=\"token punctuation\">.</span>pub  你要登录的用户名@你服务器的ip:~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>ssh</pre></td></tr></table></figure><p>上传完毕之后 Windows 端的配置就完成了</p>\n<h4 id=\"配置-linux-端\"><a class=\"markdownIt-Anchor\" href=\"#配置-linux-端\">#</a> 配置 Linux 端</h4>\n<ol>\n<li>先登录到 Linux 服务器</li>\n</ol>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh root@你服务器的ip</pre></td></tr></table></figure><p>在输入密码后就能登录上去</p>\n<ol start=\"2\">\n<li>在当前用户家目录下找到  <code>.ssh</code>  文件夹</li>\n</ol>\n<p>使用以下命令查看：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span></pre></td></tr></table></figure><p>然后使用以下命令将  <code>id_rsa.pub</code>  文件的内容追加到  <code>authorized_keys</code>  中</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> id_rsa.pub <span class=\"token operator\">>></span> authorized_keys</pre></td></tr></table></figure><ol start=\"3\">\n<li>然后用  <code>chmod</code>  修改文件的权限</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> .ssh/authorized_keys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">700</span> .ssh</pre></td></tr></table></figure><h5 id=\"修改ssh的配置文件\"><a class=\"markdownIt-Anchor\" href=\"#修改ssh的配置文件\">#</a> 修改 SSH 的配置文件</h5>\n<ol>\n<li>使用以下命令进入  <code>ssh</code>  的配置文件</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/ssh/sshd_config</pre></td></tr></table></figure><ol start=\"2\">\n<li>找到下面的三句不被注释掉，没有直接添加</li>\n</ol>\n<p>温馨提示：可以使用  <code>斜杠“/”</code>  来快速查找</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>RSAAuthentication <span class=\"token function\">yes</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PubkeyAuthentication <span class=\"token function\">yes</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>AuthorizedKeysFile .ssh/authorized_keys</pre></td></tr></table></figure><p>然后  <code>:wq</code>  保存并退出</p>\n<ol start=\"3\">\n<li>使用以下命令重启 SSH 服务</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">service</span> sshd restart</pre></td></tr></table></figure><h4 id=\"测试免密登录\"><a class=\"markdownIt-Anchor\" href=\"#测试免密登录\">#</a> 测试免密登录</h4>\n<p>在 Windows 的 power shell 上输入以下命令：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh root@你服务器的ip</pre></td></tr></table></figure><p><img data-src=\"https://s1.ax1x.com/2023/09/09/pPcQcQI.png\" alt=\"powershell3\"></p>\n<p>可以看到，直接连上了服务器，到这你的免密登录就成功了</p>\n<h4 id=\"使用指定端口登录\"><a class=\"markdownIt-Anchor\" href=\"#使用指定端口登录\">#</a> 使用指定端口登录</h4>\n<p>一般来说，为了服务器的安全起见，我们都会更改 SSH 的默认登录端口</p>\n<p>可以在服务器 ip 后加 -p 参数来指定要使用的端口</p>\n<hr>\n<p>END</p>\n",
            "tags": [
                "原创",
                "电脑技术",
                "SSH"
            ]
        }
    ]
}